name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          region: ${{ secrets.us-east-1 }}
          access-key-id: ${{ secrets.AKIAWIVDCUIS6HEZNZLR }}
          secret-access-key: ${{ "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" }}

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          ECR_REPOSITORY: ${{ secrets.hello-world-node }}
          ECR_REGISTRY: ${{ secrets.430912479781 }}.dkr.ecr.${{ secrets.us-east-1 }}.amazonaws.com
        run: |
          docker build -t $ECR_REPOSITORY:latest .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var "image_url=${{ secrets.430912479781 }}.dkr.ecr.${{ secrets.us-east-1 }}.amazonaws.com/${{ secrets.hello-world-node }}:latest"
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AKIAWIVDCUIS6HEZNZLR }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets."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" }}
